// Generated by CoffeeScript 1.7.1
(function() {
  var autoprefixer, browserSync, clean, coffee, concat, dest, gulp, gulpStripDebug, iconfont, iconfontCss, livereload, lr, minifycss, notify, plumber, rename, sass, server, src, uglify;

  gulp = require("gulp");

  sass = require("gulp-sass");

  plumber = require("gulp-plumber");

  notify = require("gulp-notify");

  minifycss = require("gulp-minify-css");

  autoprefixer = require("gulp-autoprefixer");

  concat = require("gulp-concat");

  rename = require("gulp-rename");

  uglify = require("gulp-uglify");

  coffee = require("gulp-coffee");

  clean = require("gulp-clean");

  gulpStripDebug = require("gulp-strip-debug");

  iconfontCss = require("gulp-iconfont-css");

  iconfont = require("gulp-iconfont");

  browserSync = require("browser-sync");

  lr = require("tiny-lr");

  livereload = require("gulp-livereload");

  server = lr();

  src = "src";

  dest = "../public/assets";

  gulp.task("copy", function() {
    return gulp.src([src + "/vendor/scripts/jquery.js", src + "/vendor/scripts/modernizr.js", src + "/vendor/scripts/detectizr.js"]).pipe(gulp.dest(dest + "/js"));
  });

  gulp.task("imagemin", function() {
    return gulp.src(dest + "/").pipe(coffee({
      bare: true
    })).pipe(concat("scripts.js")).pipe(gulp.dest(dest + "/js")).pipe(livereload(server));
  });

  gulp.task("coffee", function() {
    return gulp.src(src + "/scripts/**/*.coffee").pipe(coffee({
      bare: true
    })).pipe(concat("scripts.js")).pipe(gulp.dest(dest + "/js")).pipe(livereload(server));
  });

  gulp.task("coffee-dist", function() {
    return gulp.src(src + "/scripts/**/*.coffee").pipe(coffee({
      bare: true
    })).pipe(concat("scripts.js")).pipe(uglify()).pipe(gulp.dest(dest + "/js"));
  });

  gulp.task("scripts", ["coffee"], function() {
    return gulp.src([src + "/vendor/scripts/bootstrap/*.js", !src + "/vendor/scripts/plugins/_*.js", src + "/vendor/scripts/plugins/*.js", dest + "/js/scripts.js"]).pipe(concat("scripts.js")).pipe(gulp.dest(dest + "/js"));
  });

  gulp.task("scripts-dist", ["coffee"], function() {
    return gulp.src([src + "/vendor/scripts/bootstrap/*.js", !src + "/vendor/scripts/plugins/_*.js", src + "/vendor/scripts/plugins/*.js", dest + "/js/scripts.js"]).pipe(concat("scripts.js")).pipe(gulpStripDebug()).pipe(uglify()).pipe(gulp.dest(dest + "/js"));
  });

  gulp.task("styles", function() {
    return gulp.src(src + "/styles/styles.scss").pipe(plumber()).pipe(sass({
      sourceComments: "normal",
      errLogToConsole: false,
      onError: function(err) {
        return notify().write(err);
      }
    })).pipe(autoprefixer("last 15 version")).pipe(gulp.dest(dest + "/css")).pipe(livereload(server));
  });

  gulp.task("styles-dist", function() {
    return gulp.src(src + "/styles/styles.scss").pipe(plumber()).pipe(sass()).on("error", notify.onError()).on("error", function(err) {
      return console.log("Error:", err);
    }).pipe(autoprefixer("last 15 version")).pipe(minifycss({
      keepSpecialComments: 0
    })).pipe(gulp.dest(dest + "/css"));
  });

  gulp.task("browser-sync", function() {
    return browserSync.init(null, {
      server: {
        baseDir: "./dist"
      }
    });
  });

  gulp.task('watch', function() {
    return server.listen(35729, function(err) {
      if (err) {
        return console.error(err);
      }
      gulp.watch([src + '/scripts/**/*.coffee'], ['scripts']);
      gulp.watch([src + '/styles/**/*.scss'], ['styles']);
      return gulp.watch([src + "/vendor/scripts/plugins/*.js"], ['scripts']);
    });
  });

  gulp.task("iconfont", function() {
    return gulp.src(dest + "/img/partials/svg/*.svg").pipe(iconfontCss({
      fontName: "iconfont",
      path: src + "/styles/fonts/iconfont/template/_template.scss",
      targetPath: "../../_gulp/src/styles/fonts/iconfont/_iconfont.scss",
      fontPath: dest + "/fonts/iconfont"
    })).pipe(iconfont({
      fontName: "iconfont",
      normalize: true
    })).pipe(gulp.dest(dest + "/fonts/iconfont"));
  });

  gulp.task('default', ["copy", "styles", "scripts", "watch"]);

  gulp.task('dist', ["styles-dist", "scripts-dist"]);

}).call(this);

//# sourceMappingURL=gulpfile.map
